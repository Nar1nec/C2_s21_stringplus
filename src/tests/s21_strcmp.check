#include <check.h>
#include <string.h>
#include <stdlib.h>

#include "s21_string.h"

#test   strcmp_test_1
    char a[] = "Heloboba";
    char b[] = "Heloboba";
    int got = s21_strcmp(a, b);
    int expected = strcmp(a, b);
    if (got > 1) got = 1;
    if (expected > 1) expected = 1;
    if (got < -1) got = -1;
    if (expected < -1) expected = -1;
    ck_assert_int_eq(got, expected);
 

#test   strcmp_test_2
    char a[] = "HEloboba";
    char b[] = "Heloboba";
    int got = s21_strcmp(a, b);
    int expected = strcmp(a, b);
    if (got > 1) got = 1;
    if (expected > 1) expected = 1;
    if (got < -1) got = -1;
    if (expected < -1) expected = -1;
    ck_assert_int_eq(got, expected);
 

#test   strcmp_test_3
    char a[] = "Hel0boba";
    char b[] = "Helob0ba";
    int got = s21_strcmp(a, b);
    int expected = strcmp(a, b);
    if (got > 1) got = 1;
    if (expected > 1) expected = 1;
    if (got < -1) got = -1;
    if (expected < -1) expected = -1;
    ck_assert_int_eq(got, expected);
 
#test   strcmp_test_4
    char a[] = "Heloboba";
    char b[] = "";
    int got = s21_strcmp(a, b);
    int expected = strcmp(a, b);
    if (got > 1) got = 1;
    if (expected > 1) expected = 1;
    if (got < -1) got = -1;
    if (expected < -1) expected = -1;
    ck_assert_int_eq(got, expected);
 

#test   strcmp_test_5
    char a[] = "";
    char b[] = "Heloboba";
    int got = s21_strcmp(a, b);
    int expected = strcmp(a, b);
    if (got > 1) got = 1;
    if (expected > 1) expected = 1;
    if (got < -1) got = -1;
    if (expected < -1) expected = -1;
    ck_assert_int_eq(got, expected);
 

#test   strcmp_test_6
    char a[] = "L(8)L";
    char b[] = "L(8)L";
    int got = s21_strcmp(a, b);
    int expected = strcmp(a, b);
    if (got > 1) got = 1;
    if (expected > 1) expected = 1;
    if (got < -1) got = -1;
    if (expected < -1) expected = -1;
    ck_assert_int_eq(got, expected);
 

#test   strcmp_test_7
    char a[] = "";
    char b[] = "";
    int got = s21_strcmp(a, b);
    int expected = strcmp(a, b);
    if (got > 1) got = 1;
    if (expected > 1) expected = 1;
    if (got < -1) got = -1;
    if (expected < -1) expected = -1;
    ck_assert_int_eq(got, expected);
 

#test   strcmp_test_8
    char a[] = "1234567890";
    char b[] = "1234567890";
    int got = s21_strcmp(a, b);
    int expected = strcmp(a, b);
    if (got > 1) got = 1;
    if (expected > 1) expected = 1;
    if (got < -1) got = -1;
    if (expected < -1) expected = -1;
    ck_assert_int_eq(got, expected);
 


#test   strcmp_test_9
    char *str_1_1 = "LUGANO!";
    char *str_1_2 = "LUGANO!";
    int s21_c = s21_strcmp(str_1_1, str_1_2);
    int s_c = strcmp(str_1_1, str_1_2);
    if (s21_c > 0)
        s21_c = 1;
    else if (s21_c < 0)
        s21_c = -1;

    if (s_c > 0)
        s_c = 1;
    else if (s_c < 0)
        s_c = -1;
    ck_assert_int_eq(s21_c, s_c);
 

#test   strcmp_test_10
    char *str_2_1 = "LUGANO THE BEST!";
    char *str_2_2 = "LUGANO OF THE BEST!";
    int s21_c = s21_strcmp(str_2_1, str_2_2);
    int s_c = strcmp(str_2_1, str_2_2);
    if (s21_c > 0)
        s21_c = 1;
    else if (s21_c < 0)
        s21_c = -1;

    if (s_c > 0)
        s_c = 1;
    else if (s_c < 0)
        s_c = -1;
    ck_assert_int_eq(s21_c, s_c);
 

#test   strcmp_test_11
    char *str_3_1 = "LUGANO OF THE BEST!!!!!";
    char *str_3_2 = "LUGANO!";
    int s21_c = s21_strcmp(str_3_1, str_3_2);
    int s_c = strcmp(str_3_1, str_3_2);
    if (s21_c > 0)
        s21_c = 1;
    else if (s21_c < 0)
        s21_c = -1;

    if (s_c > 0)
        s_c = 1;
    else if (s_c < 0)
        s_c = -1;
    ck_assert_int_eq(s21_c, s_c);
