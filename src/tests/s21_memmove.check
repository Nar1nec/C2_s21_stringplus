#include <check.h>
#include <string.h>
#include <stdlib.h>

#include "s21_string.h"

#test memmove_test_1
    char src[200] = "";
    char src2[200] = "";
    s21_size_t copy_kByte = 0;
    char *res = src;
    char *expected = src2;
    s21_size_t check_kByte = 0;
    s21_memmove(res, src, copy_kByte);
    memmove(expected, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);

#test memmove_test_2
    char src[200] = "123SDFAZ`ESFsdfsdf";
    char src2[200] = "123SDFAZ`ESFsdfsdf";
    s21_size_t copy_kByte = 10;
    char res[200] = "";
    char expected[200] = "";
    s21_size_t check_kByte = 10;
    s21_memmove(res, src, copy_kByte);
    memmove(expected, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);
   

#test memmove_test_3
    char src[200] = "";
    char src2[200] = "";
    s21_size_t copy_kByte = 0;
    char res[200] = "i hate memcmp";
    char expected[200] = "i hate memcmp";
    s21_size_t check_kByte = 13;
    s21_memmove(res, src, copy_kByte);
    memmove(expected, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);
   

#test memmove_test_4
    char src[200] = "Hate";
    char src2[200] = "Hate";
    s21_size_t copy_kByte = 4;
    char res[200] = "i hate memcmp";
    char expected[200] = "i hate memcmp";
    s21_size_t check_kByte = 17;
    s21_memmove(res, src, copy_kByte);
    memmove(expected, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);
   

#test memmove_test_5
    char src[200] = "Hate";
    char src2[200] = "Hate";
    s21_size_t copy_kByte = 4;
    char res[200] = "i hate memcmp";
    char expected[200] = "i hate memcmp";
    s21_size_t check_kByte = 17;
    s21_memmove(res + 13, src, copy_kByte);
    memmove(expected + 13, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);
   

#test memmove_test_6
    char src[200] = "Hate";
    char src2[200] = "Hate";
    s21_size_t copy_kByte = 4;
    char res[200] = "i hate memcmp";
    char expected[200] = "i hate memcmp";
    s21_size_t check_kByte = 17;
    s21_memmove(res + 5, src, copy_kByte);
    memmove(expected + 5, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);
   

#test memmove_test_7
    char src[200] = "I HATE memmove!!!";
    char src2[200] = "I HATE memmove!!!";
    s21_size_t copy_kByte = 17;
    char *res = src;
    char *expected = src2;
    s21_size_t check_kByte = 34;
    s21_memmove(res, src, copy_kByte);
    memmove(expected, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);
   

#test memmove_test_8
    char src[200] = "I HATE memmove!!!";
    char src2[200] = "I HATE memmove!!!";
    s21_size_t copy_kByte = 17;
    char *res = src + 17;
    char *expected = src2 + 17;
    s21_size_t check_kByte = 34;
    s21_memmove(res, src, copy_kByte);
    memmove(expected, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);
   

#test memmove_test_9
    char src[200] = "I HATE memmove!!!";
    char src2[200] = "I HATE memmove!!!";
    s21_size_t copy_kByte = 17;
    char *res = src + 5;
    char *expected = src2 + 5;
    s21_size_t check_kByte = 34;
    s21_memmove(res, src, copy_kByte);
    memmove(expected, src2, copy_kByte);
    ck_assert_mem_eq(res, expected, check_kByte);
   

#test memmove_test_10
    char src[] = "aboba";
    s21_size_t kByte = 0;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_11
    char src[] = "";
    s21_size_t kByte = 0;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_12
    char src[] = "I hate memcmp";
    s21_size_t kByte = 0;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_13
    char src[] = "123";
    s21_size_t kByte = 1;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_14
    char src[] = "aboba";
    s21_size_t kByte = 1;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_15
    char src[] = "Zboba";
    s21_size_t kByte = 1;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_16
    char src[] = "09";
    s21_size_t kByte = 1;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_17
    char src[] = "abobasdafoijasdofjas asdopij";
    s21_size_t kByte = 28;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_18
    char src[] = "aposkd AOSIjFasodijpaoisdjf poisdjfg";
    s21_size_t kByte = 36;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_19
    char src[] = "aodasf ieuwfh luhasdfLIAUSHD liuh 12li3uh 12i4ouhsdfh";
    s21_size_t kByte = 53;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_20
    char src[] = "()()(((())):!,....aodasf ieuwfh luhasdfLIAUSHD liuh 12li3uh 12i4ouhsdfh";
    s21_size_t kByte = 71;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_21
    int src[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    s21_size_t kByte = 4;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
   

#test memmove_test_22
    float src[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    s21_size_t kByte = 8;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memmove_test_23
    long double src[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    s21_size_t kByte = 16;
    char res[kByte + 8];
    char expected[kByte + 8];
    s21_memmove(res, src, kByte);
    memmove(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
