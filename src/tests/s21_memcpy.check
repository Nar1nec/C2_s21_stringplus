#include <check.h>
#include <string.h>
#include <stdlib.h>

#include "s21_string.h"

#test memcpy_test_1
    s21_size_t n1 = 3;
    char b1[1024] = "";
    char b11[1024] = "";
    char str_1_2[1024] = "LUGANO THE BEST!";
    ck_assert_pstr_eq(memcpy(b1, str_1_2, n1), s21_memcpy(b11, str_1_2, n1));

#test memcpy_test_2
    s21_size_t n2 = 5;
    char b2[1024] = "";
    char b22[1024] = "";
    char str_2_2[1024] = "THE OF \0BEST!!";
    ck_assert_pstr_eq(memcpy(b2, str_2_2, n2), s21_memcpy(b22, str_2_2, n2));

#test memcpy_test_3
    s21_size_t n3 = 4;
    char b3[1024] = "777 ";
    char b33[1024] = "777 ";
    char str_3_2[1024] = "LUGANO!";
    ck_assert_pstr_eq(memcpy(b3, str_3_2, n3), s21_memcpy(b33, str_3_2, n3));

#test memcpy_test_4
    s21_size_t n4 = 4;
    char b4[1024] = "LUGANO! 777 ";
    char b44[1024] = "LUGANO! 777 ";
    ck_assert_pstr_eq(memcpy(b4, b4 + 7, n4), s21_memcpy(b44, b44 + 7, n4));

#test memcpy_test_5
    char src[] = "i hate memcmp";
    s21_size_t kByte = 12;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_6
    char src[] = "aboba";
    s21_size_t kByte = 0;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_7
    char src[] = "";
    s21_size_t kByte = 0;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_8
    char src[] = "I hate memcmp";
    s21_size_t kByte = 0;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_9
    char src[] = "123";
    s21_size_t kByte = 1;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_10
    char src[] = "aboba";
    s21_size_t kByte = 1;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_11
    char src[] = "Zboba";
    s21_size_t kByte = 1;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_12
    char src[] = "09";
    s21_size_t kByte = 1;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_13
    char src[] = "abobasdafoijasdofjas asdopij";
    s21_size_t kByte = 28;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_14
    char src[] = "aposkd AOSIjFasodijpaoisdjf poisdjfg";
    s21_size_t kByte = 36;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_15
    char src[] = "aodasf ieuwfh luhasdfLIAUSHD liuh 12li3uh 12i4ouhsdfh";
    s21_size_t kByte = 53;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);

#test memcpy_test_16
    char src[] = "()()(((())):!,....aodasf ieuwfh luhasdfLIAUSHD liuh 12li3uh 12i4ouhsdfh";
    s21_size_t kByte = 71;
    char res[kByte+8];
    char expected[kByte+8];
    s21_memcpy(res, src, kByte);
    memcpy(expected, src, kByte);
    ck_assert_mem_eq(res, expected, kByte);
